Queries Questions:

Design and Develop MongoDB Queries using aggregation and indexing with suitable example using MongoDB. 
Problem Statement: Create collection Employee with attributes empID, empName, JobTitle, ProjectName, Salary. 


1. Insert 15 Records 
2. Display the records using find and pretty function 
3. Display employee who are Developer 
4. Display Employee who are Analyst having salary > 25000 
5. Find out minimum salary for job title Salesperson 
6. Find out maximum salary for job title Salesperson 
7. Find out Average salary Government project 
8. Find out minimum salary among all records 
9. Find out maximum salary among all records 
10. Display first salary from records 
11. Display last salary from records 
12. isplay Total salary among records 
13. Display First Record 
14. Display Indexes 
s15. Create index on empID 
16. Remove The last ID 

+-------+----------------+-------------+----------+------+------------+--------+-------+----------------+-------------+----------+------+------------+--------+
Queries Answers:


1. Insert 15 Records 
> db.createCollection('employee') 
{ "ok" : 1 } 
> 
db.employee.insert({empid:1,name:'Amit',job_title:'Developer',project_name:'P1',salary:5000 0}) 
WriteResult({ "nInserted" : 1 }) 
> db.employee.insert({empid:2,name:'Ashith',job_title:'',project_name:'P1',salary:50000}) 
Display all 190 possibilities? (y or n) 
> 
db.employee.insert({empid:2,name:'Ashith',job_title:'Tester',project_name:'P2',salary:80000}) WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:3,name:'Ashish',job_title:'Analyst',project_name:'Government',sal ary:90000}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:4,name:'Jenny',job_title:'Developer',project_name:'p2',salary:600 00}) 
WriteResult({ "nInserted" : 1 }) 
> db.employee.insert({empid:5,name:'Joy',job_title:'Tester',project_name:'p3',salary:70000}) WriteResult({ "nInserted" : 1 }) 
> db.employee.insert({empid:6,name:'raj',job_title:'Analyst',project_name:'p3',salary:90000}) WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:7,name:'Rohan',job_title:'Developer',project_name:'p4',salary:600 00}) 
WriteResult({ "nInserted" : 1 }) 
> db.employee.insert({empid:8,name:'Riya',job_title:'Tester',project_name:'p4',salary:70000}) WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:9,name:'Priya',job_title:'Anlyst',project_name:'p1',salary:90000}) WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:10,name:'Pooja',job_title:'Analyst',project_name:'p2',salary:90000
}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:11,name:'Joy',job_title:'Developer',project_name:'p3',salary:7000 0}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:12,name:'ciya',job_title:'Tester',project_name:'p4',salary:80000}) WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:13,name:'shravani',job_title:'Analyst',project_name:'p4',salary:80 000}) 
WriteResult({ "nInserted" : 1 }) 
> db.employee.insert({empid:14,name:'sharvari',job_title:'Developer',project_name:'p5',salary:
50000}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:15,name:'rakshita',job_title:'Tester',project_name:'p5',salary:7000 0}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:16,name:'ramesh',job_title:'Sales_person',project_name:'p1',sala ry:20000}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:17,name:'rajesh',job_title:'Sales_person',project_name:'p5',salary :50000}) 
WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:18,name:'Rio',job_title:'Analyst',project_name:'p3',salary:25000}) WriteResult({ "nInserted" : 1 }) 
> 
db.employee.insert({empid:19,name:'Gita',job_title:'Developer',project_name:'Government',s alary:90000}) 
WriteResult({ "nInserted" : 1 }) 
 


2. Display the records using find and pretty function 
> db.employee.find() 
{ "_id" : ObjectId("652ce99f019ee79dda83d980"), "empid" : 1, "name" : "Amit", "job_title" : 
"Developer", "project_name" : "P1", "salary" : 50000 } 
{ "_id" : ObjectId("652ce9c5019ee79dda83d981"), "empid" : 2, "name" : "Ashith", "job_title" : 
"Tester", "project_name" : "P2", "salary" : 80000 } 
{ "_id" : ObjectId("652ce9e9019ee79dda83d982"), "empid" : 3, "name" : "Ashish", "job_title" : 
"Analyst", "project_name" : "Government", "salary" : 90000 } 
{ "_id" : ObjectId("652cea18019ee79dda83d983"), "empid" : 4, "name" : "Jenny", "job_title" : 
"Developer", "project_name" : "p2", "salary" : 60000 } 
{ "_id" : ObjectId("652cea3d019ee79dda83d984"), "empid" : 5, "name" : "Joy", "job_title" : 
"Tester", "project_name" : "p3", "salary" : 70000 } 
{ "_id" : ObjectId("652cea65019ee79dda83d985"), "empid" : 6, "name" : "raj", "job_title" : 
"Analyst", "project_name" : "p3", "salary" : 90000 } 
{ "_id" : ObjectId("652ceab3019ee79dda83d986"), "empid" : 7, "name" : "Rohan", "job_title" : 
"Developer", "project_name" : "p4", "salary" : 60000 } 
{ "_id" : ObjectId("652ceacb019ee79dda83d987"), "empid" : 8, "name" : "Riya", "job_title" : 
"Tester", "project_name" : "p4", "salary" : 70000 } 
{ "_id" : ObjectId("652ceafb019ee79dda83d988"), "empid" : 9, "name" : "Priya", "job_title" 
"Anlyst", "project_name" : "p1", "salary" : 90000 } 
{ "_id" : ObjectId("652ceb1d019ee79dda83d989"), "empid" : 10, "name" : "Pooja", "job_title" : 
"Analyst", "project_name" : "p2", "salary" : 90000 } 
{ "_id" : ObjectId("652ceb43019ee79dda83d98a"), "empid" : 11, "name" : "Joy", "job_title" : 
"Developer", "project_name" : "p3", "salary" : 70000 } 
{ "_id" : ObjectId("652ceb81019ee79dda83d98b"), "empid" : 12, "name" : "ciya", "job_title" : 
"Tester", "project_name" : "p4", "salary" : 80000 } 
{ "_id" : ObjectId("652ceba3019ee79dda83d98c"), "empid" : 13, "name" : "shravani", 
"job_title" : "Analyst", "project_name" : "p4", "salary" : 80000 } 
{ "_id" : ObjectId("652cebc1019ee79dda83d98d"), "empid" : 14, "name" : "sharvari", "job_title" : "Developer", "project_name" : "p5", "salary" : 50000 } 
{ "_id" : ObjectId("652cebe7019ee79dda83d98e"), "empid" : 15, "name" : "rakshita", 
"job_title" : "Tester", "project_name" : "p5", "salary" : 70000 } 
{ "_id" : ObjectId("652cedca019ee79dda83d98f"), "empid" : 16, "name" : "ramesh", "job_title" 
: "Sales_person", "project_name" : "p1", "salary" : 20000 } 
{ "_id" : ObjectId("652cede4019ee79dda83d990"), "empid" : 17, "name" : "rajesh", "job_title" 
: "Sales_person", "project_name" : "p5", "salary" : 50000 } 
{ "_id" : ObjectId("652cee11019ee79dda83d991"), "empid" : 18, "name" : "Rio", "job_title" : "Analyst", "project_name" : "p3", "salary" : 25000 } 
{ "_id" : ObjectId("652cf20b457549c1df6bc6a8"), "empid" : 19, "name" : "Gita", "job_title" : "Developer", "project_name" : "Government", "salary" : 90000 } 
> db.employee.find().pretty() 
{ 
"_id" : ObjectId("652ce99f019ee79dda83d980"), 
"empid" : 1, 
"name" : "Amit", 
"job_title" : "Developer", 
"project_name" : "P1", 
"salary" : 50000 
} 
{ 
"_id" : ObjectId("652ce9c5019ee79dda83d981"), 
"empid" : 2, 
"name" : "Ashith", 
"job_title" : "Tester", 
"project_name" : "P2", 
"salary" : 80000 
} 
{ 
"_id" : ObjectId("652ce9e9019ee79dda83d982"), 
"empid" : 3, 
"name" : "Ashish", 
"job_title" : "Analyst", 
"project_name" : "Government", 
"salary" : 90000 
} 
{ 
"_id" : ObjectId("652cea18019ee79dda83d983"), 
"empid" : 4, 
"name" : "Jenny", 
"job_title" : "Developer", 
"project_name" : "p2", 
"salary" : 60000 
} 
{ 
"_id" : ObjectId("652cea3d019ee79dda83d984"), 
"empid" : 5, 
"name" : "Joy", 
"job_title" : "Tester", 
"project_name" : "p3", 
"salary" : 70000 
} 
{ 
"_id" : ObjectId("652cea65019ee79dda83d985"), 
"empid" : 6, 
"name" : "raj", 
"job_title" : "Analyst", 
"project_name" : "p3", 
"salary" : 90000 
} 
{ 
"_id" : ObjectId("652ceab3019ee79dda83d986"), 
"empid" : 7, 
"name" : "Rohan", 
"job_title" : "Developer", 
"project_name" : "p4", 
"salary" : 60000 
} 
{ 
"_id" : ObjectId("652ceacb019ee79dda83d987"), 
"empid" : 8, 
"name" : "Riya", 
"job_title" : "Tester", 
"project_name" : "p4", 
"salary" : 70000 
} 
{ 
"_id" : ObjectId("652ceafb019ee79dda83d988"), 
"empid" : 9, 
"name" : "Priya", 
"job_title" : "Anlyst", 
"project_name" : "p1", 
"salary" : 90000 
} 
{ 
"_id" : ObjectId("652ceb1d019ee79dda83d989"), "empid" : 10, 
"name" : "Pooja", 
"job_title" : "Analyst", 
"project_name" : "p2", 
"salary" : 90000 
} 
{ 
"_id" : ObjectId("652ceb43019ee79dda83d98a"), 
"empid" : 11, 
"name" : "Joy", 
"job_title" : "Developer", 
"project_name" : "p3", 
"salary" : 70000 
} 
{ 
"_id" : ObjectId("652ceb81019ee79dda83d98b"), 
"empid" : 12, 
"name" : "ciya", 
"job_title" : "Tester", 
"project_name" : "p4", 
"salary" : 80000 
} 
{ 
"_id" : ObjectId("652ceba3019ee79dda83d98c"), 
"empid" : 13, 
"name" : "shravani", 
"job_title" : "Analyst", 
"project_name" : "p4", 
"salary" : 80000 
} 
{ 
"_id" : ObjectId("652cebc1019ee79dda83d98d"), 
"empid" : 14, 
"name" : "sharvari", 
"job_title" : "Developer", 
"project_name" : "p5", 
"salary" : 50000 
} 
{ 
"_id" : ObjectId("652cebe7019ee79dda83d98e"), 
"empid" : 15, 
"name" : "rakshita", 
"job_title" : "Tester", 
"project_name" : "p5", 
"salary" : 70000 
} 
{ 
"_id" : ObjectId("652cedca019ee79dda83d98f"), 
"empid" : 16, 
"name" : "ramesh", 
"job_title" : "Sales_person", 
"project_name" : "p1", 
"salary" : 20000 
} 
{ 
"_id" : ObjectId("652cede4019ee79dda83d990"), 
"empid" : 17, 
"name" : "rajesh", 
"job_title" : "Sales_person", 
"project_name" : "p5", 
"salary" : 50000 
} 
{ 
"_id" : ObjectId("652cee11019ee79dda83d991"), 
"empid" : 18, 
"name" : "Rio", 
"job_title" : "Analyst", 
"project_name" : "p3", 
"salary" : 25000 
} 
{ 
"_id" : ObjectId("652cf20b457549c1df6bc6a8"), 
"empid" : 19, 
"name" : "Gita", 
"job_title" : "Developer", 
"project_name" : "Government", 
"salary" : 90000 
} 


3. Display employee who are Developer 
> db.employee.find({job_title:'Developer'}) 
{ "_id" : ObjectId("652ce99f019ee79dda83d980"), "empid" : 1, "name" : "Amit", "job_title" : 
"Developer", "project_name" : "P1", "salary" : 50000 } 
{ "_id" : ObjectId("652cea18019ee79dda83d983"), "empid" : 4, "name" : "Jenny", "job_title" : 
"Developer", "project_name" : "p2", "salary" : 60000 } 
{ "_id" : ObjectId("652ceab3019ee79dda83d986"), "empid" : 7, "name" : "Rohan", "job_title" : 
"Developer", "project_name" : "p4", "salary" : 60000 } 
{ "_id" : ObjectId("652ceb43019ee79dda83d98a"), "empid" : 11, "name" : "Joy", "job_title" : 
"Developer", "project_name" : "p3", "salary" : 70000 } 
{ "_id" : ObjectId("652cebc1019ee79dda83d98d"), "empid" : 14, "name" : "sharvari", 
"job_title" : "Developer", "project_name" : "p5", "salary" : 50000 } 
{ "_id" : ObjectId("652cf20b457549c1df6bc6a8"), "empid" : 19, "name" : "Gita", "job_title" : 
"Developer", "project_name" : "Government", "salary" : 90000 } 
 

4. Display Employee who are Analyst having salary > 25000 
> db.employee.find({job_title:'Analyst',salary:{$gte:25000}}) 
{ "_id" : ObjectId("652ce9e9019ee79dda83d982"), "empid" : 3, "name" : "Ashish", "job_title" : "Analyst", "project_name" : "Government", "salary" : 90000 } 
{ "_id" : ObjectId("652cea65019ee79dda83d985"), "empid" : 6, "name" : "raj", "job_title" : 
"Analyst", "project_name" : "p3", "salary" : 90000 } 
{ "_id" : ObjectId("652ceb1d019ee79dda83d989"), "empid" : 10, "name" : "Pooja", "job_title" : 
"Analyst", "project_name" : "p2", "salary" : 90000 } 
{ "_id" : ObjectId("652ceba3019ee79dda83d98c"), "empid" : 13, "name" : "shravani", 
"job_title" : "Analyst", "project_name" : "p4", "salary" : 80000 } 
{ "_id" : ObjectId("652cee11019ee79dda83d991"), "empid" : 18, "name" : "Rio", "job_title" : "Analyst", "project_name" : "p3", "salary" : 25000 } 
 

5. Find out minimum salary for job title Salesperson 
> 
db.employee.aggregate([{$match:{job_title:'Sales_person'}},{$group:{_id:null,min_salary:{$m in:'$salary'}}}]) 
{ "_id" : null, "min_salary" : 20000 } 


6. Find out maximum salary for job title Salesperson 
> 
db.employee.aggregate([{$match:{job_title:'Sales_person'}},{$group:{_id:null,max_salary:{$ max:'$salary'}}}]) 
{ "_id" : null, "max_salary" : 50000 } 

7. Find out Average salary Government project 
> 
db.employee.aggregate([{$match:{project_name:'Government'}},{$group:{_id:null,avg_salary :{$avg:'$salary'}}}]) 
{ "_id" : null, "avg_salary" : 90000 } 
 
8. Find out minimum salary among all records 
 
> db.employee.aggregate([{$group:{_id:null,min_salary:{$min:'$salary'}}}]) 
{ "_id" : null, "min_salary" : 20000 } 
 
9. Find out maximum salary among all records 
> db.employee.aggregate([{$group:{_id:null,max_salary:{$max:'$salary'}}}]) 
{ "_id" : null, "max_salary" : 90000 } 
 
10. Display first salary from records 
> db.employee.aggregate([{$group:{_id:null,first_salary:{$first:'$salary'}}}]) { "_id" : null, "first_salary" : 50000 } 
 
11. Display last salary from records 
> db.employee.aggregate([{$group:{_id:null,last_salary:{$last:'$salary'}}}]) 
{ "_id" : null, "last_salary" : 90000 } 
 
12. isplay Total salary among records 
> db.employee.aggregate([{$group:{_id:null,total_salary:{$sum:'$salary'}}}]) 
{ "_id" : null, "total_salary" : 1285000 } 
 
 
13. Display First Record 
> db.employee.find().limit(1) 
{ "_id" : ObjectId("652ce99f019ee79dda83d980"), "empid" : 1, "name" : "Amit", "job_title" : "Developer", "project_name" : "P1", "salary" : 50000 } 
 
14. Display Indexes 
> db.employee.getIndexes() 
[ { "v" : 2, "key" : { "_id" : 1 }, "name" : "_id_" } ] 
 
15. Create index on empID 
> db.employee.createIndex({id:1}) 
{ 
"createdCollectionAutomatically" : false, 
"numIndexesBefore" : 1, 
"numIndexesAfter" : 2, 
"ok" : 1 } 
> db.employee.getIndexes() 
[ 
{ 
"v" : 2, 
"key" : { "_id" : 1 
}, 
"name" : "_id_" 
}, 
{ 
"v" : 2, 
"key" : { 
"id" : 1 
}, 
"name" : "id_1" 
} ] 


16. Remove The last ID 
> db.employee.remove({empid:19}) 
WriteResult({ "nRemoved" : 1 }) 
 
 
 
